{"version":3,"sources":["components/Navbar.js","components/Textform.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","prop","className","modeHandler","mode","href","title","type","id","role","onChange","toggleMode","for","Textform","props","useState","text","setText","value","event","target","rows","onClick","toUpperCase","toLowerCase","words","split","co","Array","from","forEach","elem","length","handleWordCount","defaultProps","App","setmode","Object","assign","document","body","style","backgroundColor","color","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.fed69b2a.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nexport default function Navbar(prop) {\r\n\treturn (\r\n\t\t<nav className={`navbar navbar-expand-lg navbar-${prop.modeHandler.mode} bg-${prop.modeHandler.mode}`}>\r\n\t\t\t<div className=\"container-fluid\">\r\n\t\t\t\t<a className=\"navbar-brand\" href=\"/\">{prop.title}</a>\r\n\t\t\t\t<button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n\t\t\t\t<span className=\"navbar-toggler-icon\"></span>\r\n\t\t\t\t</button>\r\n\t\t\t\t<div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n\t\t\t\t<ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n\t\t\t\t\t<li className=\"nav-item\">\r\n\t\t\t\t\t<a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li className=\"nav-item\">\r\n\t\t\t\t\t<a className=\"nav-link\" href=\"/\">Link</a>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li className=\"nav-item dropdown\">\r\n\t\t\t\t\t<a className=\"nav-link dropdown-toggle\" href=\"/\" id=\"navbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n\t\t\t\t\t\tDropdown\r\n\t\t\t\t\t</a>\r\n\t\t\t\t\t<ul className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n\t\t\t\t\t\t<li><a className=\"dropdown-item\" href=\"/\">Action</a></li>\r\n\t\t\t\t\t\t<li><a className=\"dropdown-item\" href=\"/\">Another action</a></li>\r\n\t\t\t\t\t\t<li><hr className=\"dropdown-divider\"/></li>\r\n\t\t\t\t\t\t<li><a className=\"dropdown-item\" href=\"/\">Something else here</a></li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li className=\"nav-item\">\r\n\t\t\t\t\t<a className=\"nav-link disabled\">Disabled</a>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t</ul>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"form-check form-switch\">\r\n\t\t\t\t\t<input className=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckChecked\" onChange={prop.modeHandler.toggleMode}/>\r\n\t\t\t\t\t<label className={`form-check-label text-${prop.modeHandler.mode === \"light\"?\"dark\":\"light\"}`} for=\"flexSwitchCheckChecked\">{prop.modeHandler.mode === \"light\"?\"dark\":\"light\"} mode</label>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</nav>\r\n\t)\r\n}\r\n\r\nNavbar.propTypes = {\r\n\ttilte: PropTypes.string\r\n};\r\n\r\nNavbar.defaultProps = {\r\n\ttitle: 'Title here..'\r\n};\r\n\r\n\r\n","import React, {useState} from 'react'\r\n\r\nexport default function Textform(props) {\r\n\tconst handleOnChange = (event) => {\r\n\t\t// console.log(\"text changed\");\r\n\t\tsetText(event.target.value);\r\n\t};\r\n\r\n\tconst handleUpClick = () => {\r\n\t\t// console.log(\"button was clicked\");\r\n\t\tsetText(text.toUpperCase());\r\n\t};\r\n\r\n\tconst handleLoClick = () => {\r\n\t\tsetText(text.toLowerCase());\r\n\t};\r\n\r\n\tconst handleWordCount = () => {\r\n\t\tlet words = text.split(\" \");\r\n\t\tlet co = 0;\r\n\t\tArray.from(words).forEach((elem) =>{\r\n\t\t\tif (elem.length > 0)\r\n\t\t\t\tco += 1;\r\n\t\t});\r\n\t\treturn co;\r\n\t};\r\n\t\t\r\n\tconst [text, setText] = useState('');\r\n\treturn (\r\n\t<>\r\n\t\t<div className=\"container mt-3\">\r\n\t\t\t<h1>\r\n\t\t\t\t{props.title}\r\n\t\t\t</h1>\r\n\t\t\t<div className=\"mb-3\">\r\n\t\t\t\t<textarea className=\"form-control\" value={text} onChange={handleOnChange} id=\"exampleFormControlTextarea1\" rows=\"5\"></textarea>\r\n\t\t\t</div>\r\n\t\t\t<button className=\"btn btn-primary\" onClick={handleUpClick} >Uppercase</button>\t\r\n\t\t\t<button className=\"ms-3 btn btn-primary\" onClick={handleLoClick} >Uppercase</button>\t\t\t\t\r\n\t\t</div>\r\n\t\t<div className={`container mt-3`}>\r\n\t\t \t<p>The word count is {handleWordCount(text)} and number of characters is {text.length}</p>\r\n\t\t\t <h2>Preview</h2>\r\n\t\t\t <p>{text.length > 0?text: \"Enter something to preview...\"}</p>\r\n\t\t</div>\r\n\t</>\r\n\t)\r\n}\r\n","import './App.css';\nimport Navbar from './components/Navbar';\nimport Textform from './components/Textform';\nimport React, { useState } from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\n\nfunction App() {\n  const [mode, setmode] = useState(\"light\");\n\n  const toggleMode = () => {\n    if (mode === \"dark\"){\n      setmode(\"light\");\n      Object.assign(document.body.style, {backgroundColor: \"white\", color: \"black\"});\n    }\n    else{\n      setmode(\"dark\");\n      Object.assign(document.body.style, {backgroundColor: \"black\", color: \"white\"});\n    }\n  };\n  \n  return (\n    <>  \n      <Navbar title=\"My App\" modeHandler={{mode: mode, toggleMode: toggleMode}}/>\n      <div className=\"container\">\n        <Textform title=\"Enter the text\"/>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}